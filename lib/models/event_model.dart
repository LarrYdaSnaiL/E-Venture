/// A data model class for event information.
class EventModel {
  String? id; // The unique key generated by Firebase, nullable for creation
  final String title;
  final String description;
  final DateTime date;
  final String location;
  final String organizerId; // UID of the user (panitia) who created the event

  EventModel({
    this.id,
    required this.title,
    required this.description,
    required this.date,
    required this.location,
    required this.organizerId,
  });

  /// Converts an EventModel instance into a Map (JSON format) for Firebase.
  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'title': title,
      'description': description,
      'date': date.toIso8601String(),
      'location': location,
      'organizerId': organizerId,
    };
  }

  /// Creates an EventModel instance from a map (JSON data from Firebase).
  factory EventModel.fromJson(Map<String, dynamic> json) {
    return EventModel(
      id: json['id'],
      title: json['title'] ?? '',
      description: json['description'] ?? '',
      date: json['date'] != null
          ? DateTime.parse(json['date'])
          : DateTime.now(),
      location: json['location'] ?? '',
      organizerId: json['organizerId'] ?? '',
    );
  }
}
